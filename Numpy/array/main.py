"""""
 텐서 구분
- 다차원 배열은 "tensor"로 구성한다.
- 정수나 실수 등은 scalar 로 물리량만 존재하고, 방향이 없기 때문에 0차원 tensor라고 할 수 있다.
- 벡터는 물리량과 방향이 존재해서 1차원 tensor이다.
- tensor는 기본적으로 벡터가 기본 원소로 구성된다.
- 2차원 행렬 부터는 실제 벡터를 원소로 구성한다.
- 3차원일 경우 내부는 2차원인 행렬을 원소로 구성한다.

- 여기서 scalar 는 일반적인 숫자형이다.

"""""
import numpy as np

# 요건 리스트 형식의 data type 이고 1,2,3,4,5 를 가지고 있다.
a = [1,2,3,4,5]
print(type(a))

# 요건 numpy의 배열 형식의 data type 이고, 마찬가지로 1,2,3,4,5 를 가지고 있다.
# 선언할 때 () 안에 []로 배열을 선언한다.
b = np.array([1,2,3,4,5])
print(type(b))
# 1차원 친구가 현재 원소를 5개 가지고 있는데, 원소확인은 shape로 한다.
print("b가 가진 원소 갯수 :{}".format(b.shape))
# 몇차원인지 확인하는 것은 ndim 함수로 확인한다.
print("b는 {} 차원 배열이다.".format(b.ndim))

# 이 친구는 numpy 모듈에서 다차원 배열을 정의하는 친구인데
# arange(원소갯수).reshape(행,열) 해주면 된다.
# 대신 행,열에 맞게 들어갈 수 있도록 갯수를 맞춰줘야한다.
c = np.arange(9).reshape(3,3)
print("c는 {}차원 배열이고,\n {}\n를 원소로 가지고 있다".format(c.ndim,c))